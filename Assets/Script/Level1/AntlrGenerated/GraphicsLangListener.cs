//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GraphicsLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Drawing.Parsing {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GraphicsLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IGraphicsLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] GraphicsLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] GraphicsLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GraphicsLangParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GraphicsLangParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] GraphicsLangParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] GraphicsLangParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] GraphicsLangParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] GraphicsLangParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] GraphicsLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] GraphicsLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] GraphicsLangParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] GraphicsLangParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] GraphicsLangParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] GraphicsLangParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] GraphicsLangParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] GraphicsLangParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] GraphicsLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] GraphicsLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.startDrawStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartDrawStatement([NotNull] GraphicsLangParser.StartDrawStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.startDrawStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartDrawStatement([NotNull] GraphicsLangParser.StartDrawStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.drawStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawStatement([NotNull] GraphicsLangParser.DrawStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.drawStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawStatement([NotNull] GraphicsLangParser.DrawStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.drawControlStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawControlStatement([NotNull] GraphicsLangParser.DrawControlStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.drawControlStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawControlStatement([NotNull] GraphicsLangParser.DrawControlStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.colorSetStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColorSetStatement([NotNull] GraphicsLangParser.ColorSetStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.colorSetStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColorSetStatement([NotNull] GraphicsLangParser.ColorSetStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] GraphicsLangParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] GraphicsLangParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GraphicsLangParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GraphicsLangParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] GraphicsLangParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] GraphicsLangParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] GraphicsLangParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] GraphicsLangParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.pointAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointAccess([NotNull] GraphicsLangParser.PointAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.pointAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointAccess([NotNull] GraphicsLangParser.PointAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccess([NotNull] GraphicsLangParser.ArrayAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccess([NotNull] GraphicsLangParser.ArrayAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] GraphicsLangParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] GraphicsLangParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.pointLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointLiteral([NotNull] GraphicsLangParser.PointLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.pointLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointLiteral([NotNull] GraphicsLangParser.PointLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] GraphicsLangParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] GraphicsLangParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.matrixLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrixLiteral([NotNull] GraphicsLangParser.MatrixLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.matrixLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrixLiteral([NotNull] GraphicsLangParser.MatrixLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] GraphicsLangParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] GraphicsLangParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GraphicsLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GraphicsLangParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GraphicsLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GraphicsLangParser.TypeContext context);
}
} // namespace Drawing.Parsing
